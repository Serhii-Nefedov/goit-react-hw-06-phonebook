{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/SearchContacts/SearchContacts.module.css","components/redux/actions.js","components/redux/store.js","components/redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","_","rootReducer","combineReducers","contacts","store","configureStore","reducer","getContacts","getFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","stateName","setStateName","stateNumber","setStateNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","className","styles","contactForm","onSubmit","preventDefault","find","alert","type","onChange","pattern","title","ContactsList","filteredContacts","allContacts","setItem","stringify","map","item","onClick","SearchContacts","searchContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,6B,mBCA3ED,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,eAAiB,yC,gJCE7BC,EAAaC,YAAa,mBAAmB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACxEC,QAAS,CACPC,GAAIC,cACJJ,KAAMA,EACNC,OAAQA,OAINI,EAAgBN,YAAa,sBAE7BO,EAAiBP,YAAa,+BCT9BQ,EAAkBC,YAAa,UACnCC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADJ,QACoB,IADpB,mBAGhCf,GAAa,SAACgB,EAAD,OAAUZ,EAAV,EAAUA,QAAV,4BAA4BY,GAA5B,CAAmCZ,OAHhB,cAIhCG,GAAgB,SAACS,EAAD,OAAUZ,EAAV,EAAUA,QAAV,OACfY,EAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQb,KAAOD,QALR,IAS/Be,EAAgBT,YAAc,GAAD,eAChCF,GAAiB,SAACY,EAAD,YAAMhB,YAGpBiB,EAAcC,YAAgB,CAClCC,SAAUd,EACVQ,OAAQE,IAOKK,EAJDC,YAAe,CAC3BC,QAASL,I,QCvBLM,EAAc,SAAAX,GAAK,OAAIA,EAAMO,UAC7BK,EAAY,SAAAZ,GAAK,OAAIA,EAAMC,QAE3BY,EAAsB,SAAAb,GAC1B,IAAMO,EAAWI,EAAYX,GACvBC,EAASW,EAAUZ,GAEzB,GAAIO,GAAYN,EAAQ,CACtB,IAAMa,EAAmBb,EAAOc,cAIhC,OAHwBR,EAASN,QAAO,SAAAC,GAAO,OAC7CA,EAAQhB,KAAK6B,cAAcC,SAASF,MAIxC,OAAOP,G,wBCRM,SAASU,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMf,EAAWgB,YAAYZ,GACvBa,EAAWC,cAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlB1C,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,MACd,OAAQ3C,GACN,IAAK,OACHkC,EAAaS,GACb,MAEF,IAAK,SACHP,EAAeO,KAuBfC,EAAQ,WACZV,EAAa,IACbE,EAAe,KAGjB,OACE,uBAAMS,UAAWC,IAAOC,YAAaC,SArBlB,SAACP,GAGpB,OAFAA,EAAEQ,iBAEE5B,GAAYA,EAAS6B,MAAK,SAAClC,GAAD,OAAaA,EAAQhB,OAASiC,KACnDkB,MAAMlB,EAAY,2BACfA,EAEAE,GAIZG,EAASxC,EAAW,CAAEE,KAAMiC,EAAWhC,OAAQkC,UAC/CS,KAJSO,MAAM,oBAFNA,MAAM,mBAef,UACE,yCAEE,uBACEnD,KAAK,OACLoD,KAAK,OACLT,MAAOV,EACPoB,SAAUb,EACVc,QAAQ,yHACRC,MAAM,ucAIV,2CAEE,uBACEvD,KAAK,SACLoD,KAAK,OACLT,MAAOR,EACPkB,SAAUb,EACVc,QAAQ,yFACRC,MAAM,qiBAIV,wBAAQH,KAAK,SAAb,4B,qBCtES,SAASI,IACtB,IAAMC,EAAmBpB,YAAYV,GAC/B+B,EAAcrB,YAAYZ,GAChCd,OAAOC,aAAa+C,QAAQ,WAAYlD,KAAKmD,UAAUF,IAEvD,IAAMpB,EAAWC,cAEjB,OACE,oBAAIM,UAAWC,IAAOU,aAAtB,SACGC,EAAiBI,KAAI,SAAA7C,GAAO,OAC3B,qBAAI6B,UAAWC,IAAOgB,KAAtB,UACG9C,EAAQhB,KACR,KACAgB,EAAQf,OACT,wBAAQ8D,QAAS,kBAAMzB,EAASjC,EAAcW,EAAQb,MAAtD,sBAJ+Ba,EAAQb,S,qBCVlC,SAAS6D,IACtB,IAAMjD,EAASsB,YAAYX,GACrBY,EAAWC,cAEjB,OACE,wBAAOM,UAAWC,IAAOmB,eAAzB,kCAEE,uBACEjE,KAAK,SACLoD,KAAK,OACLT,MAAO5B,EACPsC,SAAU,SAAAZ,GAAC,OAAIH,EAAShC,EAAemC,EAAEC,OAAOC,cCXxD,IAYeuB,EAZH,WACV,OACE,qCACE,2CACA,cAACnC,EAAD,IACA,0CACA,cAACiC,EAAD,IACA,cAACR,EAAD,Q,YCHNW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJgD,SAASC,eAAe,W","file":"static/js/main.9b917061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__x2O4e\",\"item\":\"ContactsList_item__1Nnec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1dC8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContacts\":\"SearchContacts_searchContacts__1un4a\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction('form/addContact', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('form/deleteContact');\r\n\r\nconst filterContacts = createAction('contactsList/filterContacts');\r\n\r\nexport { addContact, deleteContact, filterContacts };","import { combineReducers } from 'redux';\r\nimport { configureStore, createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from '../redux/actions';\r\n\r\nconst contactsReducer = createReducer(\r\n  JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n  {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n      state.filter(contact => contact.id !== payload),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;","const getContacts = state => state.contacts;\r\nconst getFilter = state => state.filter;\r\n\r\nconst getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  if (contacts && filter) {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContact = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return filteredContact;\r\n  }\r\n  return contacts;\r\n};\r\n\r\nexport { getContacts, getFilter, getFilteredContacts };","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../redux/actions\";\r\nimport { getContacts } from \"../redux/selectors\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const [stateName, setStateName] = useState(\"\");\r\n  const [stateNumber, setStateNumber] = useState(\"\");\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setStateName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setStateNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts && contacts.find((contact) => contact.name === stateName)) {\r\n      return alert(stateName + \" is already in contacts\");\r\n    } else if (!stateName) {\r\n      return alert(\"Type some name\");\r\n    } else if (!stateNumber) {\r\n      return alert(\"Type some number\");\r\n    }\r\n\r\n    dispatch(addContact({ name: stateName, number: stateNumber }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setStateName(\"\");\r\n    setStateNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={stateName}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={stateNumber}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../redux/actions';\r\nimport { getContacts, getFilteredContacts } from '../redux/selectors';\r\nimport styles from './ContactsList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  const allContacts = useSelector(getContacts);\r\n  window.localStorage.setItem('contacts', JSON.stringify(allContacts));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.ContactsList}>\r\n      {filteredContacts.map(contact => (\r\n        <li className={styles.item} key={contact.id}>\r\n          {contact.name}\r\n          {': '}\r\n          {contact.number}\r\n          <button onClick={() => dispatch(deleteContact(contact.id))}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../redux/actions';\r\nimport { getFilter } from '../redux/selectors';\r\nimport styles from './SearchContacts.module.css';\r\n\r\nexport default function SearchContacts() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.searchContacts}>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e => dispatch(filterContacts(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}","import ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport SearchContacts from './components/SearchContacts';\n\n\nconst App = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <SearchContacts />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}